@model exa1try2.Models.Product

@{
    ViewData["Title"] = "Create";
}

<h1>Create</h1>

<h4>Product</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create" id="createProductForm">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="ProductName" class="control-label"></label>
                <input asp-for="ProductName" class="form-control" />
                <span asp-validation-for="ProductName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="SupplierId" class="control-label"></label>
                <select asp-for="SupplierId" class="form-control" asp-items="ViewBag.SupplierId"></select>
                <span asp-validation-for="SupplierId" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="CategoryId" class="control-label"></label>
                <select asp-for="CategoryId" class="form-control" asp-items="ViewBag.CategoryId"></select>
                <span asp-validation-for="CategoryId" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="QuantityPerUnit" class="control-label"></label>
                <input asp-for="QuantityPerUnit" class="form-control" />
                <span asp-validation-for="QuantityPerUnit" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="UnitPrice" class="control-label"></label>
                <input asp-for="UnitPrice" class="form-control" />
                <span asp-validation-for="UnitPrice" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="UnitsInStock" class="control-label"></label>
                <input asp-for="UnitsInStock" class="form-control" />
                <span asp-validation-for="UnitsInStock" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="UnitsOnOrder" class="control-label"></label>
                <input asp-for="UnitsOnOrder" class="form-control" />
                <span asp-validation-for="UnitsOnOrder" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="ReorderLevel" class="control-label"></label>
                <input asp-for="ReorderLevel" class="form-control" />
                <span asp-validation-for="ReorderLevel" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Discounted" class="control-label"></label>
                <input asp-for="Discounted" class="form-control" />
                <span asp-validation-for="Discounted" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        $(function () {
            $('#createProductForm').validate({
                rules: {
                    ProductName: "required",
                    SupplierId: "required",
                    CategoryId: "required",
                    QuantityPerUnit: "required",
                    UnitPrice: "required",
                    UnitsInStock: "required",
                    UnitsOnOrder: "required",
                    ReorderLevel: "required",
                    Discounted: "required"
                },
                messages: {
                    ProductName: "Please enter product name",
                    SupplierId: "Please select a supplier",
                    CategoryId: "Please select a category",
                    QuantityPerUnit: "Please enter quantity per unit",
                    UnitPrice: "Please enter unit price",
                    UnitsInStock: "Please enter units in stock",
                    UnitsOnOrder: "Please enter units on order",
                    ReorderLevel: "Please enter reorder level",
                    Discounted: "Please enter discounted"
                },
                errorClass: "is-invalid",
                validClass: "is-valid",
                errorElement: "div",
                errorPlacement: function (error, element) {
                    error.addClass("invalid-feedback");
                    error.insertAfter(element);
                },
                success: function (label, element) {
                    $(element).addClass("is-valid");
                    $(element).next('.invalid-feedback').remove();
                },
                highlight: function (element, errorClass, validClass) {
                    $(element).addClass(errorClass).removeClass(validClass);
                    $(element).next('.invalid-feedback').remove();
                },
                unhighlight: function (element, errorClass, validClass) {
                    $(element).addClass(validClass).removeClass(errorClass);
                    $(element).next('.invalid-feedback').remove();
                },
                submitHandler: function (form) {
                    alert('Form submitted successfully!');
                    form.submit();
                }
            });
        });
    </script>
}
